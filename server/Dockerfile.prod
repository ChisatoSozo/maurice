# Stage 1: Build the application
FROM rust:1.72 as builder

# Set the working directory
WORKDIR /usr/src/app

# Copy Cargo.toml and Cargo.lock to cache dependencies
COPY Cargo.toml Cargo.lock ./

# Build dependencies to cache them
RUN cargo fetch

# Copy the entire source code
COPY . .

# Build the application in release mode for optimal performance
RUN cargo build --release

# Stage 2: Create the final lightweight image
FROM debian:buster-slim

# Set the working directory
WORKDIR /usr/src/app

# Install necessary runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy the compiled binary from the builder stage
COPY --from=builder /usr/src/app/target/release/your_project_binary /usr/local/bin/your_project_binary

# Set the binary as the default entry point
ENTRYPOINT ["your_project_binary"]

# Expose port if your app listens on a specific port
EXPOSE 8080
